[{"/Users/dylanhensel/Documents/projects/workoutProof/workoutproof/src/index.js":"1","/Users/dylanhensel/Documents/projects/workoutProof/workoutproof/src/reportWebVitals.js":"2","/Users/dylanhensel/Documents/projects/workoutProof/workoutproof/src/components/App.js":"3","/Users/dylanhensel/Documents/projects/workoutProof/workoutproof/src/components/Exercise.jsx":"4"},{"size":522,"mtime":1618259380440,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1611971679876,"results":"7","hashOfConfig":"6"},{"size":287,"mtime":1618179114851,"results":"8","hashOfConfig":"6"},{"size":1666,"mtime":1618179414959,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"na2jty",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},"/Users/dylanhensel/Documents/projects/workoutProof/workoutproof/src/index.js",[],"/Users/dylanhensel/Documents/projects/workoutProof/workoutproof/src/reportWebVitals.js",[],["21","22"],"/Users/dylanhensel/Documents/projects/workoutProof/workoutproof/src/components/App.js",["23"],"// import logo from \"./logo.svg\";\nimport \"../sass/main.scss\";\nimport React, { useState } from \"react\";\nimport Exercise from \"./Exercise\";\n// import ReactDom from 'react-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Exercise />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/dylanhensel/Documents/projects/workoutProof/workoutproof/src/components/Exercise.jsx",["24","25"],"import React, { useState } from \"react\";\nimport pic8 from \"../assets/img_8.JPG\";\nimport \"../sass/main.scss\";\n\nfunction Exercise() {\n  // workout name\n  let [workout, setWorkout] = useState(\"\");\n  // workout img\n  let [picture, setPicture] = useState(\"\");\n  // number of reps for the exercise set\n  let [reps, setReps] = useState(0);\n  // workout description\n  let [description, setDescription] = useState(\"\");\n  //workout array\n  const [exerciseArray, setExerciseArray] = useState([]);\n  // key = exercise # or _id value\n  // next - functianality - page reload with new content\n\n  // onload run newExercise to generate starting array\n  // onload set state (useState)\n  // newExercise(e === onload) called three times\n  const newExercise = (e) => {\n    setWorkout((workout = \"Burpees\"));\n    setReps((reps = 25));\n    setDescription((description = \"Jump up jump up and get down!\"));\n    setPicture((picture = pic8));\n    // on click would check length of array, shift 0th exercise off array and push new random on, return shifted exercise as new exercise\n    // after length > some numbber 3 5 w/e\n    // select random number between 0 and database.length\n    // if previous 3 items in array is same id, re auto generate number\n    // push exercise at that id to array (& remove element if necessary)\n  };\n\n  return (\n    <div>\n      <h1 className=\"workout-name\">{workout}</h1>\n      <img className=\"picture\" alt={workout} src={picture} />\n      <p className=\"description\">{description}</p>\n      <h3 className=\"number-of-reps\">{reps}</h3>\n      <button className=\"next\" onClick={newExercise}>\n        NEXT\n      </button>\n    </div>\n  );\n}\n\nexport default Exercise;\n",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":3,"column":17,"nodeType":"32","messageId":"33","endLine":3,"endColumn":25},{"ruleId":"30","severity":1,"message":"34","line":15,"column":10,"nodeType":"32","messageId":"33","endLine":15,"endColumn":23},{"ruleId":"30","severity":1,"message":"35","line":15,"column":25,"nodeType":"32","messageId":"33","endLine":15,"endColumn":41},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'exerciseArray' is assigned a value but never used.","'setExerciseArray' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]